<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:int-ftp="http://www.springframework.org/schema/integration/ftp"
	xmlns:int="http://www.springframework.org/schema/integration"
	xmlns:int-file="http://www.springframework.org/schema/integration/file"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/integration/file http://www.springframework.org/schema/integration/file/spring-integration-file.xsd
		http://www.springframework.org/schema/integration/ftp http://www.springframework.org/schema/integration/ftp/spring-integration-ftp.xsd
		http://www.springframework.org/schema/integration http://www.springframework.org/schema/integration/spring-integration.xsd">

	<bean id="ftpServer" class="org.springframework.integration.ftp.TestFtpServer">
		<constructor-arg value="FtpServerOutboundTests"/>
	</bean>

	<int:channel id="output">
		<int:queue/>
	</int:channel>

	<int:channel id="inboundGet"/>

	<int-ftp:outbound-gateway session-factory="ftpSessionFactory"
							  request-channel="inboundGet"
							  command="get"
							  expression="payload"
							  local-directory-expression="@ftpServer.targetLocalDirectoryName + #remoteDirectory.toUpperCase()"
							  local-filename-generator-expression="#remoteFileName.replaceFirst('ftpSource', 'localTarget')"
							  reply-channel="output"/>

	<int:channel id="invalidDirExpression"/>

	<int-ftp:outbound-gateway session-factory="ftpSessionFactory"
							  request-channel="invalidDirExpression"
							  command="get"
							  expression="payload"
							  local-directory-expression="T(java.io.File).separator + #remoteDirectory + '?:'"
							  reply-channel="output"/>

	<int:channel id="inboundMGet"/>

	<int-ftp:outbound-gateway session-factory="ftpSessionFactory"
							  request-channel="inboundMGet"
							  command="mget"
							  expression="payload"
							  local-directory-expression="@ftpServer.targetLocalDirectoryName + #remoteDirectory"
							  local-filename-generator-expression="#remoteFileName.replaceFirst('ftpSource', 'localTarget')"
							  reply-channel="output"/>

	<int:channel id="inboundMGetRecursive"/>

	<int-ftp:outbound-gateway session-factory="ftpSessionFactory"
							  request-channel="inboundMGetRecursive"
							  command="mget"
							  expression="payload"
							  command-options="-R"
							  local-directory-expression="@ftpServer.targetLocalDirectoryName + #remoteDirectory"
							  local-filename-generator-expression="#remoteFileName.replaceFirst('ftpSource', 'localTarget')"
							  reply-channel="output"/>

	<int:channel id="inboundMGetRecursiveFiltered"/>

	<int-ftp:outbound-gateway session-factory="ftpSessionFactory"
							  request-channel="inboundMGetRecursiveFiltered"
							  command="mget"
							  expression="payload"
							  command-options="-R"
							  filename-regex="(subFtpSource|.*1.txt)"
							  local-directory-expression="@ftpServer.targetLocalDirectoryName + #remoteDirectory"
							  local-filename-generator-expression="#remoteFileName.replaceFirst('ftpSource', 'localTarget')"
							  reply-channel="output"/>

	<int:channel id="inboundMPut"/>

	<int-ftp:outbound-gateway session-factory="ftpSessionFactory"
							  request-channel="inboundMPut"
							  command="mput"
							  auto-create-directory="true"
							  filename-pattern="*.txt"
							  expression="payload"
							  remote-directory="ftpTarget"
							  mput-filter="sortingFilter"
							  reply-channel="output"/>

	<int:channel id="inboundMPutRecursive"/>

	<int-ftp:outbound-gateway session-factory="ftpSessionFactory"
							  request-channel="inboundMPutRecursive"
							  command="mput"
							  command-options="-R"
							  auto-create-directory="true"
							  filename-pattern="*.txt"
							  expression="payload"
							  remote-directory="ftpTarget"
							  mput-filter="sortingFilter"
							  reply-channel="output"/>

	<int:channel id="inboundMPutRecursiveFiltered"/>

	<int-ftp:outbound-gateway session-factory="ftpSessionFactory"
							  request-channel="inboundMPutRecursiveFiltered"
							  command="mput"
							  command-options="-R"
							  mput-regex="(.*1.txt|sub.*)"
							  auto-create-directory="true"
							  filename-pattern="*.txt"
							  expression="payload"
							  remote-directory="ftpTarget"
							  reply-channel="output"/>

	<int-ftp:outbound-gateway session-factory="ftpSessionFactory"
							  request-channel="inboundGetStream"
							  command="get"
							  command-options="-stream"
							  expression="payload"
							  remote-directory="ftpTarget"
							  reply-channel="stream" />

	<int:chain input-channel="stream">
		<int-file:splitter markers="true" />
		<int:payload-type-router resolution-required="false" default-output-channel="output">
			<int:mapping type="org.springframework.integration.file.splitter.FileSplitter$FileMarker"
						 channel="markers" />
		</int:payload-type-router>
	</int:chain>

	<int:service-activator input-channel="markers"
	  expression="payload.mark.toString().equals('END') ? headers['file_remoteSession'].close() : null"/>

	<int:channel id="appending" />

	<int-ftp:outbound-channel-adapter id="appender"
							  session-factory="ftpSessionFactory"
							  channel="appending"
							  mode="APPEND"
							  use-temporary-file-name="false"
							  remote-directory="ftpTarget"
							  auto-create-directory="true"
							  remote-file-separator="/"	/>

	<int:channel id="ignoring" />

	<int-ftp:outbound-channel-adapter id="ignore"
							  session-factory="ftpSessionFactory"
							  channel="ignoring"
							  mode="IGNORE"
							  remote-directory="ftpTarget"
							  auto-create-directory="true"
							  remote-file-separator="/"	/>

	<int:channel id="failing" />

	<int-ftp:outbound-channel-adapter id="fail"
							  session-factory="ftpSessionFactory"
							  channel="failing"
							  mode="FAIL"
							  remote-directory="ftpTarget"
							  auto-create-directory="true"
							  remote-file-separator="/"	/>

	<bean id="sortingFilter"
		class="org.springframework.integration.ftp.outbound.FtpServerOutboundTests$SortingFileListFilter"/>

	<int-ftp:outbound-gateway
			session-factory="ftpSessionFactory"
			session-callback="messageSessionCallback"
			request-channel="inboundCallback"
			reply-channel="output"/>

	<bean id="messageSessionCallback"
		  class="org.springframework.integration.ftp.outbound.FtpServerOutboundTests$TestMessageSessionCallback"/>


</beans>
